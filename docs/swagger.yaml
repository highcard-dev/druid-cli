definitions:
  CommandInstructionSet:
    properties:
      needs:
        items:
          type: string
        type: array
      procedures:
        items:
          $ref: '#/definitions/Procedure'
        type: array
      run:
        $ref: '#/definitions/domain.RunMode'
    type: object
  Console:
    properties:
      exit:
        type: integer
      inputMode:
        type: string
      type:
        $ref: '#/definitions/domain.ConsoleType'
    required:
    - inputMode
    - type
    type: object
  ConsolesResponse:
    properties:
      consoles:
        additionalProperties:
          $ref: '#/definitions/Console'
        type: object
    required:
    - consoles
    type: object
  Procedure:
    properties:
      data: {}
      id:
        type: string
      ignore_failure:
        type: boolean
      mode:
        type: string
      wait: {}
    type: object
  ProcessMonitorMetrics:
    properties:
      connections:
        items:
          type: string
        type: array
      cpu:
        type: number
      memory:
        type: integer
      pid:
        type: integer
    type: object
  ProcessMonitorMetricsMap:
    additionalProperties:
      $ref: '#/definitions/ProcessMonitorMetrics'
    type: object
  ProcessTreeNode:
    properties:
      children:
        items:
          $ref: '#/definitions/ProcessTreeNode'
        type: array
      cmdline:
        type: string
      cpu_percent:
        type: number
      gids:
        items:
          type: integer
        type: array
      io_counters:
        type: string
      memory:
        type: string
      memory_ex:
        type: string
      name:
        type: string
      process:
        type: string
      username:
        type: string
    type: object
  ProcessTreeRoot:
    properties:
      root:
        $ref: '#/definitions/ProcessTreeNode'
      total_cpu_percent:
        type: number
      total_io_counters_read:
        type: integer
      total_io_counters_write:
        type: integer
      total_memory_rss:
        type: integer
      total_memory_swap:
        type: integer
      total_memory_vms:
        type: integer
      total_process_count:
        type: integer
    type: object
  PsTreeMap:
    additionalProperties:
      $ref: '#/definitions/ProcessTreeRoot'
    type: object
  ScrollFile:
    properties:
      app_version:
        description: don't make this a semver, it's not allways
        type: string
      commands:
        additionalProperties:
          $ref: '#/definitions/CommandInstructionSet'
        type: object
      cronjobs:
        items:
          $ref: '#/definitions/domain.Cronjob'
        type: array
      desc:
        type: string
      init:
        type: string
      keepAlivePPM:
        type: integer
      name:
        type: string
      plugins:
        additionalProperties:
          additionalProperties:
            type: string
          type: object
        type: object
      ports:
        items:
          $ref: '#/definitions/domain.Port'
        type: array
      version:
        type: string
    type: object
  ScrollLogStream:
    properties:
      key:
        type: string
      log:
        items:
          type: string
        type: array
    required:
    - key
    - log
    type: object
  WebsocketToken:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  domain.AugmentedPort:
    properties:
      check_activity:
        type: boolean
      description:
        type: string
      finish_after_command:
        type: string
      inactive_since:
        type: string
      inactive_since_sec:
        type: integer
      mandatory:
        type: boolean
      name:
        type: string
      open:
        type: boolean
      port:
        type: integer
      protocol:
        type: string
      sleep_handler:
        type: string
      start_delay:
        type: integer
      vars:
        items:
          $ref: '#/definitions/domain.ColdStarterVars'
        type: array
    type: object
  domain.ColdStarterVars:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  domain.ConsoleType:
    enum:
    - tty
    - process
    - plugin
    type: string
    x-enum-varnames:
    - ConsoleTypeTTY
    - ConsoleTypeProcess
    - ConsoleTypePlugin
  domain.Cronjob:
    properties:
      command:
        type: string
      name:
        type: string
      schedule:
        type: string
    type: object
  domain.Port:
    properties:
      check_activity:
        type: boolean
      description:
        type: string
      finish_after_command:
        type: string
      mandatory:
        type: boolean
      name:
        type: string
      port:
        type: integer
      protocol:
        type: string
      sleep_handler:
        type: string
      start_delay:
        type: integer
      vars:
        items:
          $ref: '#/definitions/domain.ColdStarterVars'
        type: array
    type: object
  domain.Process:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  domain.RunMode:
    enum:
    - always
    - once
    - restart
    - persistent
    type: string
    x-enum-comments:
      RunModeAlways: default
      RunModePersistent: restarts on failure and on program restart
    x-enum-varnames:
    - RunModeAlways
    - RunModeOnce
    - RunModeRestart
    - RunModePersistent
  domain.ScrollLockStatus:
    enum:
    - running
    - done
    - error
    - waiting
    type: string
    x-enum-varnames:
    - ScrollLockStatusRunning
    - ScrollLockStatusDone
    - ScrollLockStatusError
    - ScrollLockStatusWaiting
  handler.HealhResponse:
    properties:
      mode:
        type: string
      progress:
        type: number
      start_date:
        type: string
    type: object
  handler.ProcessesBody:
    properties:
      processes:
        additionalProperties:
          $ref: '#/definitions/domain.Process'
        type: object
    type: object
  handler.StartProcedureRequestBody:
    properties:
      data:
        type: string
      mode:
        type: string
      process:
        type: string
      sync:
        type: boolean
    type: object
  handler.StartScrollRequestBody:
    properties:
      command:
        type: string
      sync:
        type: boolean
    type: object
info:
  contact: {}
  description: Druid CLI is a process runner to launches and manages various sorts
    of applications, like gameservers, databases or webservers.
  title: Druid CLI
  version: 0.1.0
paths:
  /api/v1/coldstarter/finish:
    post:
      consumes:
      - '*/*'
      operationId: finishColdStarter
      responses:
        "202":
          description: Accepted
      summary: Finish Coldstarter
      tags:
      - coldstarter
      - druid
      - daemon
  /api/v1/command:
    post:
      consumes:
      - '*/*'
      operationId: runCommand
      parameters:
      - description: Scroll Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.StartScrollRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get current scroll
      tags:
      - scroll
      - druid
      - daemon
  /api/v1/consoles:
    get:
      consumes:
      - application/json
      description: Get List of all consoles
      operationId: getConsoles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ConsolesResponse'
      summary: Get All Consoles
      tags:
      - druid
      - daemon
      - console
  /api/v1/daemon/stop:
    post:
      consumes:
      - '*/*'
      operationId: stopDaemon
      responses:
        "202":
          description: Accepted
      summary: Finish Coldstarter
      tags:
      - druid
      - daemon
  /api/v1/health:
    get:
      consumes:
      - '*/*'
      operationId: getHealth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.HealhResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handler.HealhResponse'
      summary: Get ports from scroll with additional information
      tags:
      - health
      - druid
      - daemon
  /api/v1/logs:
    get:
      consumes:
      - '*/*'
      operationId: listLogs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ScrollLogStream'
            type: array
      summary: List all logs
      tags:
      - logs
      - druid
      - daemon
  /api/v1/logs/{stream}:
    get:
      consumes:
      - '*/*'
      operationId: listLog
      parameters:
      - description: Stream name
        in: path
        name: stream
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScrollLogStream'
      summary: List stream logs
      tags:
      - logs
      - druid
      - daemon
  /api/v1/metrics:
    get:
      consumes:
      - application/json
      description: Get the metrics for all processes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProcessMonitorMetricsMap'
      summary: Get all process metrics
      tags:
      - metrics
      - druid
      - daemon
  /api/v1/ports:
    get:
      consumes:
      - '*/*'
      operationId: getPorts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AugmentedPort'
            type: array
      summary: Get ports from scroll with additional information
      tags:
      - port
      - druid
      - daemon
  /api/v1/procedure:
    post:
      consumes:
      - '*/*'
      operationId: runProcedure
      parameters:
      - description: Procedure Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.StartProcedureRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "201":
          description: Created
      summary: Run procedure
      tags:
      - scroll
      - druid
      - daemon
  /api/v1/procedures:
    get:
      consumes:
      - '*/*'
      operationId: getProcedures
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/domain.ScrollLockStatus'
            type: object
      summary: Get process procedure statuses
      tags:
      - process
      - procedures
      - druid
      - daemon
  /api/v1/processes:
    get:
      consumes:
      - '*/*'
      operationId: getRunningProcesses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ProcessesBody'
      summary: Get running processes
      tags:
      - process
      - druid
      - daemon
  /api/v1/pstree:
    get:
      consumes:
      - application/json
      description: Get pstree of running process
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PsTreeMap'
      summary: Get all process metrics
      tags:
      - metrics
      - druid
      - daemon
  /api/v1/queue:
    get:
      consumes:
      - '*/*'
      operationId: getQueue
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/domain.ScrollLockStatus'
            type: object
      summary: Get current scroll
      tags:
      - queue
      - druid
      - daemon
  /api/v1/scroll:
    get:
      consumes:
      - '*/*'
      operationId: getScroll
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScrollFile'
      summary: Get current scroll
      tags:
      - scroll
      - druid
      - daemon
  /api/v1/token:
    get:
      consumes:
      - application/json
      description: Get the metrics for all processes.
      operationId: createToken
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WebsocketToken'
      summary: Get current scroll
      tags:
      - websocket
      - druid
      - daemon
swagger: "2.0"
